[{"C:\\Users\\shaha\\React\\react-todo-app\\src\\index.js":"1","C:\\Users\\shaha\\React\\react-todo-app\\src\\App.js":"2","C:\\Users\\shaha\\React\\react-todo-app\\src\\components\\TodoForm.js":"3","C:\\Users\\shaha\\React\\react-todo-app\\src\\components\\TodoList.js":"4","C:\\Users\\shaha\\React\\react-todo-app\\src\\components\\Todo.js":"5"},{"size":198,"mtime":1607845722504,"results":"6","hashOfConfig":"7"},{"size":184,"mtime":1607850087584,"results":"8","hashOfConfig":"7"},{"size":754,"mtime":1607850682790,"results":"9","hashOfConfig":"7"},{"size":649,"mtime":1607852651988,"results":"10","hashOfConfig":"7"},{"size":654,"mtime":1607852513636,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"rw21ab",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":2,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\shaha\\React\\react-todo-app\\src\\index.js",[],["25","26"],"C:\\Users\\shaha\\React\\react-todo-app\\src\\App.js",[],"C:\\Users\\shaha\\React\\react-todo-app\\src\\components\\TodoForm.js",[],"C:\\Users\\shaha\\React\\react-todo-app\\src\\components\\TodoList.js",["27"],"import React, {useState} from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([])\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n        console.log(...todos);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>What Are You Ganna Do To Day</h1>\r\n            <TodoForm onSubmit={addTodo} />\r\n            <Todo todos={todos} completeTodo={completeTodo}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","C:\\Users\\shaha\\React\\react-todo-app\\src\\components\\Todo.js",["28","29","30","31"],"import React from 'react'\r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\n\r\nfunction Todo() {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    })\r\n\r\n    return Todo.map(( todo, index) => (\r\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine />\r\n                <TiEdit />\r\n            </div>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":2,"message":"37","line":23,"column":47,"nodeType":"38","messageId":"39","endLine":23,"endColumn":59},{"ruleId":"40","severity":1,"message":"41","line":6,"column":12,"nodeType":"38","messageId":"42","endLine":6,"endColumn":16},{"ruleId":"40","severity":1,"message":"43","line":6,"column":18,"nodeType":"38","messageId":"42","endLine":6,"endColumn":25},{"ruleId":"36","severity":2,"message":"44","line":6,"column":29,"nodeType":"38","messageId":"39","endLine":6,"endColumn":37},{"ruleId":"36","severity":2,"message":"37","line":13,"column":47,"nodeType":"38","messageId":"39","endLine":13,"endColumn":59},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-undef","'completeTodo' is not defined.","Identifier","undef","no-unused-vars","'edit' is assigned a value but never used.","unusedVar","'setEdit' is assigned a value but never used.","'useState' is not defined.","no-global-assign","no-unsafe-negation"]